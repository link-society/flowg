---
name: release-package

on:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  docker:
    strategy:
      matrix:
        include:
          - ghrunner: ubuntu-latest
            docker_image_tag_suffix: ""
            arch: "amd64"
            os: "linux"
          - ghrunner: ubuntu-24.04-arm
            docker_image_tag_suffix: "-linux-arm"
            arch: "arm64"
            os: "linux"

    runs-on: ${{ matrix.ghrunner }}

    steps:
      - name: checkout@scm
        uses: actions/checkout@v5

      - name: setup@docker
        uses: docker/setup-buildx-action@v3

      - name: login@docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build@docker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/flowg.dockerfile
          build-args: |
            UPX_ARCH=${{ matrix.arch }}
            UPX_OS=${{ matrix.os }}
          tags: |
            linksociety/flowg:latest${{ matrix.docker_image_tag_suffix }}
            linksociety/flowg:${{ github.event.release.tag_name }}${{ matrix.docker_image_tag_suffix }}
          push: true
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  binary:
    strategy:
      matrix:
        include:
          - ghrunner: ubuntu-latest
            rstarget: x86_64-unknown-linux-gnu
            goos: linux
            goarch: amd64
          - ghrunner: ubuntu-24.04-arm
            rstarget: aarch64-unknown-linux-gnu
            goos: linux
            goarch: arm64
          - ghrunner: macos-latest
            rstarget: aarch64-apple-darwin
            goos: darwin
            goarch: arm64

    runs-on: ${{ matrix.ghrunner }}

    steps:
      - name: checkout@scm
        uses: actions/checkout@v5

      - name: setup@buildchain
        uses: ./.github/actions/setup-buildchain
        with:
          ghtoken: ${{ secrets.GITHUB_TOKEN }}
          rstarget: ${{ matrix.rstarget }}

      - name: build@binary
        run: task build:all
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          NODE_ENV: "production"

      - name: compress@binary
        if: matrix.goos != 'darwin'
        uses: crazy-max/ghaction-upx@v3
        with:
          files: bin/*

      - name: upload@binary
        run: |
          tar -czf ${ARCHIVE_NAME} bin/ LICENSE.txt
          gh release upload ${RELEASE_NAME} ${ARCHIVE_NAME}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARCHIVE_NAME: flowg-${{ github.event.release.tag_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          RELEASE_NAME: ${{ github.event.release.tag_name }}
