---
name: test-e2e

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      pr:
        required: false
        type: number

permissions:
  packages: read
  checks: write
  pull-requests: write
  statuses: write

jobs:
  api:
    runs-on: ubuntu-latest
    steps:
      - name: checkout@scm
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          ref: "${{ inputs.ref }}"

      - name: setup@testsuite
        uses: ./.github/actions/setup-testsuite

      - name: run@test
        working-directory: ./tests
        run: pdm run pytest
        env:
          FLOWG_TEST_SUITES: api

      - name: report@test
        uses: mikepenz/action-junit-report@5b7ee5a21e8674b695313d769f3cbdfd5d4d53a4
        if: ${{ inputs.pr && (success() || failure()) }}
        with:
          report_paths: "./tests/reports/api/junit.xml"
          include_passed: true
          check_name: "API End-To-End Test Report"
          job_summary: true
          comment: true
          updateComment: true
          fail_on_failure: true
          commit: ${{ inputs.ref }}
          pr_id: ${{ inputs.pr }}

  web:
    runs-on: ubuntu-latest
    steps:
      - name: checkout@scm
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          ref: "${{ inputs.ref }}"

      - name: setup@testsuite
        uses: ./.github/actions/setup-testsuite
        with:
          ref: ${{ inputs.ref }}
          ghactor: ${{ github.actor }}
          ghtoken: ${{ secrets.GITHUB_TOKEN }}

      - name: run@test
        working-directory: ./tests
        run: pdm run pytest
        env:
          FLOWG_TEST_SUITES: web

      - name: report@test
        uses: joonvena/robotframework-reporter-action@229b6d4248b20be6e54f4fc32c7414130d1bf200
        if: ${{ success() || failure() }}
        with:
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          report_path: "./tests/reports/web/"

      - name: report-success@status
        uses: guibranco/github-status-action-v2@631f55ea0251f0fb284525ad86c30e9f7a8dd284
        if: ${{ success() }}
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: 'Web End-To-End Test Report'
          description: 'Passed'
          state: 'success'
          sha: ${{ inputs.ref }}

      - name: report-failure@status
        uses: guibranco/github-status-action-v2@631f55ea0251f0fb284525ad86c30e9f7a8dd284
        if: ${{ failure() }}
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: 'Web End-To-End Test Report'
          description: 'Failure'
          state: 'failure'
          sha: ${{ inputs.ref }}

      - name: upload-logs@artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4
        with:
          name: web-e2e-reports
          path: "./tests/reports/web/"
          retention-days: 1

      - name: report@fail
        if: ${{ failure() }}
        run: exit 1

  consul:
    runs-on: ubuntu-latest
    steps:
      - name: checkout@scm
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          ref: "${{ inputs.ref }}"

      - name: setup@testsuite
        uses: ./.github/actions/setup-testsuite

      - name: run@test
        working-directory: ./tests
        run: pdm run pytest
        env:
          FLOWG_TEST_SUITES: consul

      - name: report@test
        uses: mikepenz/action-junit-report@5b7ee5a21e8674b695313d769f3cbdfd5d4d53a4
        if: ${{ success() || failure() }}
        with:
          report_paths: "./tests/reports/consul/junit.xml"
          include_passed: true
          check_name: "Consul End-To-End Test Report"
          job_summary: true
          comment: true
          updateComment: true
          fail_on_failure: true
          commit: ${{ inputs.ref }}
          pr_id: ${{ inputs.pr }}

  k8s:
    runs-on: ubuntu-latest
    steps:
      - name: checkout@scm
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          ref: "${{ inputs.ref }}"

      - name: setup@testsuite
        uses: ./.github/actions/setup-testsuite

      - name: setup@k8s
        uses: ./.github/actions/setup-k8s

      - name: load@k8s
        run: kind load docker-image linksociety/flowg:latest --name flowg

      - name: lint@helm
        run: ct lint --chart-dirs ./k8s/charts --charts ./k8s/charts/flowg --validate-maintainers=false

      - name: test@helm
        run: |
          set -ex
          kubectl get ns flowg-system || kubectl create ns flowg-system
          ct install \
            --chart-dirs ./k8s/charts \
            --charts ./k8s/charts/flowg \
            --namespace flowg-system \
            --helm-extra-set-args '--set=flowg.image.tag=latest --set=flowg.image.pullPolicy=Never --wait'
