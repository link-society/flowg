---
name: build-binary

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      gh-runner:
        required: false
        type: string
        default: ubuntu-latest
      rust-target:
        required: false
        type: string
        default: x86_64-unknown-linux-gnu
      goos:
        required: false
        type: string
        default: linux
      goarch:
        required: false
        type: string
        default: amd64

permissions:
  packages: write

jobs:
  build:
    runs-on: ${{ inputs.gh-runner }}

    steps:
      - name: checkout@scm
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          ref: ${{ inputs.ref }}

      - name: setup@buildchain
        uses: ./.github/actions/setup-buildchain
        with:
          ghtoken: ${{ secrets.GITHUB_TOKEN }}
          rstarget: ${{ inputs.rust-target }}

      - name: setup@oras
        uses: oras-project/setup-oras@22ce207df3b08e061f537244349aac6ae1d214f6

      - name: login@oras
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          printf '%s' "${GITHUB_TOKEN}" | oras login ghcr.io -u ${GITHUB_ACTOR} --password-stdin

      - name: build@binary
        run: task build:all doc:gen:cli doc:gen:openapi
        env:
          GOOS: ${{ inputs.goos }}
          GOARCH: ${{ inputs.goarch }}
          NODE_ENV: "production"

      - name: compress@binary
        if: inputs.goos != 'darwin'
        uses: crazy-max/ghaction-upx@db8cc9515a4a7ea1b312cb82fbeae6d716daf777
        with:
          files: bin/*

      - name: upload@oras
        env:
          ARTIFACT_ID: ${{ inputs.ref }}-${{ inputs.goos }}-${{ inputs.goarch }}
        run: |
          oras push ghcr.io/link-society/flowg/ci-artifacts/binaries:${ARTIFACT_ID} \
            bin/* LICENSE.txt

          oras push ghcr.io/link-society/flowg/ci-artifacts/doc-cli:${ARTIFACT_ID} \
            website/docs/cli/flowg-client/*.md \
            website/docs/cli/flowg-health/*.md \
            website/docs/cli/flowg-server/*.md

          oras push ghcr.io/link-society/flowg/ci-artifacts/doc-openapi:${ARTIFACT_ID} \
            website/src/openapi.json
