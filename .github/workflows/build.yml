---
name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

permissions:
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout@scm
        uses: actions/checkout@v4

      - name: setup@docker
        uses: docker/setup-buildx-action@v3

      - name: build@docker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/flowg.dockerfile
          tags: "linksociety/flowg:latest"
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/oci-flowg.tar

      - name: upload@artifact
        uses: actions/upload-artifact@v4
        with:
          name: oci-flowg
          path: /tmp/oci-flowg.tar

  test-e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout@scm
        uses: actions/checkout@v4

      - name: download@artifact
        uses: actions/download-artifact@v4
        with:
          name: oci-flowg
          path: /tmp

      - name: load@docker
        run: docker load --input /tmp/oci-flowg.tar

      - name: setup@test
        uses: gacts/install-hurl@v1

      - name: e2e@test
        working-directory: ./tests/e2e
        run: sh ./run.sh

      - name: report@test
        uses: mikepenz/action-junit-report@v5.0.0-a03
        if: ${{ github.event_name == 'pull_request' && (success() || failure()) }}
        with:
          report_paths: "./tests/e2e/reports/junit.xml"
          include_passed: true
          check_name: "End-To-End Test Report"
          job_summary: true
          comment: true
          updateComment: true
          fail_on_failure: true

  test-k8s:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout@scm
        uses: actions/checkout@v4

      - name: download@artifact
        uses: actions/download-artifact@v4
        with:
          name: oci-flowg
          path: /tmp

      - name: setup@k8s
        uses: ./.github/actions/setup-k8s

      - name: load@k8s
        run: kind load image-archive /tmp/oci-flowg.tar --name flowg

      - name: lint@helm
        run: ct lint --chart-dirs ./k8s/charts --charts ./k8s/charts/flowg --validate-maintainers=false

      - name: test@helm
        run: |
          set -ex
          kubectl get ns flowg-system || kubectl create ns flowg-system
          ct install --chart-dirs ./k8s/charts --charts ./k8s/charts/flowg --namespace flowg-system --helm-extra-set-args '--set=flowg.image.tag=latest'
