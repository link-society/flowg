// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.771
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"link-society.com/flowg/internal/auth"
)

type HeadProps struct {
	Permissions auth.Permissions
}

func Head(props HeadProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<link rel=\"stylesheet\" href=\"/static/webcomponents/floweditor.bundle.css\"><script type=\"application/javascript\" src=\"/static/webcomponents/floweditor.bundle.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if props.Permissions.CanEditPipelines {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script type=\"application/javascript\">\n      document.addEventListener('DOMContentLoaded', () => {\n        const action_save = document.getElementById('action_save')\n        const data_pipeline_name = document.getElementById('data_pipeline_name')\n        const data_pipeline_flow = document.getElementById('data_pipeline_flow')\n\n        const add_node_fabs = document.querySelectorAll('.flowg-addnode-btn')\n        for (const fab of add_node_fabs) {\n          fab.addEventListener('click', (e) => {\n            data_pipeline_flow.addNode(fab.dataset.nodetype)\n          })\n        }\n\n        if (data_pipeline_name.value !== '') {\n          history.pushState(null, '', `/web/pipelines/edit/${data_pipeline_name.value}/`)\n        }\n\n        action_save.addEventListener('click', () => {\n          if (data_pipeline_name.value === '') {\n            M.toast({ html: '&#10060; Please provide a pipeline name' })\n            data_pipeline_name.classList.add('invalid')\n          } else {\n            const form = document.createElement('form')\n            form.setAttribute('method', 'post')\n            form.setAttribute('action', window.location.href)\n            form.classList.add('hide')\n\n            const input_name = document.createElement('input')\n            input_name.setAttribute('type', 'hidden')\n            input_name.setAttribute('name', 'name')\n            input_name.setAttribute('value', data_pipeline_name.value)\n\n            const input_flow = document.createElement('input')\n            input_flow.setAttribute('type', 'hidden')\n            input_flow.setAttribute('name', 'flow')\n            input_flow.setAttribute('value', data_pipeline_flow.getAttribute('flow'))\n\n            form.appendChild(input_name)\n            form.appendChild(input_flow)\n            document.body.appendChild(form)\n\n            form.submit()\n          }\n        })\n\n        data_pipeline_name.addEventListener('input', () => {\n          data_pipeline_name.classList.remove('invalid')\n        })\n      })\n    </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
