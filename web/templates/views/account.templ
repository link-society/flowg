package views

import (
	"link-society.com/flowg/internal/auth"

  "link-society.com/flowg/web/templates/layouts"
)

templ accountUserInfo(user *auth.User) {
  <div class="col s12 m6 h-full">
    <article class="card h-full flex flex-col p-0">
      <section class="card-content p-0 h-0 flex-grow flex-shrink flex flex-col">
        <header
          class="
            flex flex-row items-center
            p-3
            blue lighten-2
            white-text
          "
        >
          <p class="card-title flex-grow mb-0 font-semibold">Profile</p>
        </header>

        <main class="flex-grow flex-shrink h-0 overflow-auto p-3">
          <section class="section">
            <div class="input-field">
              <input
                id="username"
                type="text"
                value={user.Name}
                disabled
              />
              <label for="username" class="active">Username</label>
            </div>

            <p class="font-semibold">Roles:</p>

            <div class="w-full flex flex-row gap-2 py-1 items-center justify-start">
              for _, role := range user.Roles {
                <span class="grey lighten-2 z-depth-1 px-2 py-1">
                  {role}
                </span>
              }
            </div>
          </section>

          <div class="divider"></div>

          <form
            class="section row flex flex-row items-center"
            hx-post="/web/account/change-password/"
            hx-swap="none"
          >
            <div class="input-field col s12 m5">
              <i class="material-icons prefix">lock</i>
              <input
                id="old_password"
                type="password"
                name="old_password"
                required
              />
              <label for="old_password">Old Password</label>
            </div>

            <div class="input-field col s12 m5">
              <i class="material-icons prefix">lock</i>
              <input
                id="new_password"
                type="password"
                name="new_password"
                required
              />
              <label for="new_password">New Password</label>
            </div>

            <div class="col s12 m2">
              <button
                class="waves-effect waves-light btn-small"
                type="submit"
              >
                <i class="material-icons">check</i>
              </button>
            </div>
          </form>
        </main>
      </section>
    </article>
  </div>
}

templ accountTokenList(tokenUUIDs []string) {
  <div class="col s12 m6 h-full">
    <article class="card h-full flex flex-col p-0">
      <section class="card-content p-0 h-0 flex-grow flex-shrink flex flex-col">
        <header
          class="
            flex flex-row items-center
            p-3
            blue lighten-2
            white-text
          "
        >
          <p class="card-title flex-grow mb-0 font-semibold">Personal Access Tokens</p>
          <button
            class="waves-effect waves-light btn-small"
            hx-post="/web/account/token/new/"
            hx-target="#modal-content"
          >
            <i class="material-icons left">add</i>
            Create Token
          </button>
        </header>

        <main class="flex-grow flex-shrink h-0 overflow-auto">
          <table class="w-full table-responsive pat highlight">
            <thead class="grey lighten-2 z-depth-1">
              <tr>
                <th>UUID</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              for _, tokenUUID := range tokenUUIDs {
                <tr data-token={tokenUUID}>
                  <td class="font-monospace">{tokenUUID}</td>
                  <td>
                    <button
                      class="waves-effect waves-light btn-small red"
                      hx-get={"/web/account/token/delete/"+tokenUUID+"/"}
                    >
                      <i class="material-icons">delete</i>
                    </button>
                  </td>
                </tr>
              }
            </tbody>
          </table>
        </main>
      </section>
    </article>
  </div>
}

type AccountProps struct {
  User       *auth.User
  TokenUUIDs []string
}

templ Account(
  props         AccountProps,
  permissions   auth.Permissions,
  notifications []string,
) {
  @layouts.App(layouts.AppProps{
    Head:          nil,
    CurrentNav:    "account",
    Permissions:   permissions,
    Notifications: notifications,
  }) {
    <div class="w-full h-full flex flex-col">
      <section class="row section w-full mb-0 flex-grow">
        @accountUserInfo(props.User)
        @accountTokenList(props.TokenUUIDs)
      </section>
    </div>
  }
}
